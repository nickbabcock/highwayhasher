name: CI

on:
  pull_request:
  push:
    branches: ['master']
    tags: ['v*']
  schedule:
  - cron: '00 01 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
        build:
        - win-msvc
        - macos
        - macos-aarch64
        - linux-gnu
        - linux-aarch64
        - linux-armv7
        include:
        - build: win-msvc
          os: windows-latest
        - build: macos
          os: macos-13
        - build: macos-aarch64
          os: macos-14
        - build: linux-gnu
          os: ubuntu-latest
        - build: linux-aarch64
          os: ubuntu-latest
          target: aarch64-unknown-linux-gnu
        - build: linux-armv7
          os: ubuntu-latest
          target: armv7-unknown-linux-gnueabihf

    steps:
    - uses: actions/checkout@v4
    - uses: jdx/mise-action@v2
    - run: rustup target add wasm32-unknown-unknown
    - name: Use Cross
      if: matrix.target != '' && matrix.os == 'ubuntu-latest'
      run: |
        cargo install --version 0.2.1 cross
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
    - name: Add rustup target
      if: matrix.target != '' && matrix.os != 'ubuntu-latest'
      run: |
        rustup target add ${{ matrix.target }}
        echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
    - name: Use Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    - run: npm install
    - name: build
      shell: bash
      run: |
        mise run build:wasm
        npm run build:native -- ${TARGET:+--target "$TARGET"}
        npm run build:bundle
    - name: npm test
      if: matrix.target == ''
      shell: bash
      run: npx playwright install && npm run test:inplace
    - name: Set artifact name
      shell: bash
      working-directory: dist/node
      run: |
        echo "ARTIFACT_NAME=$(echo highwayhasher*.node)" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v4
      if: matrix.node == 20
      with:
        path: dist/node/highwayhasher*.node
        name: ${{ env.ARTIFACT_NAME }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        path: artifacts-temp
    - name: Flatten artifacts
      run: |
        mkdir artifacts
        find artifacts-temp -type f -exec cp '{}' artifacts/ \;
        ls -lR artifacts
    - name: Create Release
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions);
          const fs = require('fs').promises;
          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });
          const tag_name = process.env.GITHUB_REF.split("/")[2];
          const release = await github.rest.repos.createRelease({
            owner, repo,
            tag_name,
            draft: false,
            target_commitish: sha
          });

          console.log('created release', { release });

          for (let file of await fs.readdir('artifacts')) {
            console.log('uploading', file);

            await github.rest.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`artifacts/${file}`)
            });
          }
